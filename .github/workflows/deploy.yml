name: Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  deploy-extension:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          # NOTE(krishan711): need full history to calculate build number
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: extension
          load: true
          cache-from: type=gha,scope=extension
          cache-to: type=gha,mode=max,scope=extension
          tags: ${{ env.DOCKER_IMAGE }}
      - name: Build extension
        run: |
          docker run --name build $DOCKER_IMAGE make build-executable
          docker cp build:/app/executable.tar.gz ./extension/executable.tar.gz
      - name: Calculate extension version
        run: echo "::set-output name=version::$(jq -r .version ./extension/package.json)"
        id: version
      - name: Calculate commit count
        id: vars
        run: echo ::set-output name=commit_count::$(git rev-list --all --count)
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          prerelease: true
          release_name: ${{ steps.version.outputs.version }}
          tag_name: "build-${{ steps.vars.outputs.commit_count }}"
      - name: Upload extension artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension/executable.tar.gz
          asset_name: extension.tar.gz
          asset_content_type: application/tar+gzip
